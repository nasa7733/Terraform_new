# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
stages:
- stage: stage1
  jobs:
  - job: test
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: CmdLine@2
      displayName: 'Run a one-line script'
      inputs:
        script: echo Hello, world!
- stage: stage2
  jobs:
  - job: select terraform version
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'
- stage: stage3
  jobs:
  - job: terraform init
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformTaskV3@3
      inputs:
        provider: 'gcp'
        command: 'init'
        backendServiceGCP: 'gcp-sc'
        backendGCPBucketName: 'rohit-46'
- stage: stage4
  jobs:
  - job: terraform plan
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformTaskV3@3
      inputs:
        provider: 'gcp'
        command: 'plan'
        environmentServiceNameGCP: 'gcp-sc'
- stage: stage5
  jobs:
  - job: terraform apply
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformTaskV3@3
      inputs:
        provider: 'gcp'
        command: 'destroy'
        commandOptions: '--auto-approve'
        environmentServiceNameGCP: 'gcp-sc'